// ***************************************************************************
// *
// *   Copyright © 2008 International Business Machines
// *   Corporation and others. All Rights Reserved.
// *
// ***************************************************************************
// ả

de {
    //------------------------------------------------------------
    // Rule Based Number Format Support
    //------------------------------------------------------------

    // Spellout rules for German

    // * Sometimes number spellouts are written with initial capital
    // * in German (as a noun), but for now we don't cover that here.

    SpelloutRules {
        "%jahr: =%year=;\n"
        "%year:\n"
            "-x: minus >>;\n"
            "null; eins; zwei; drei; vier; f\u00FCnf; sechs; sieben; acht; neun;\n"
            "zehn; elf; zw\u00F6lf; >>\u00ADzehn;\n"
            "20: [>%masculine>\u00ADund\u00AD]zwanzig;\n"
            "30: [>%masculine>\u00ADund\u00AD]drei\u00DFig;\n"
            "40: [>%masculine>\u00ADund\u00AD]vierzig;\n"
            "50: [>%masculine>\u00ADund\u00AD]f\u00FCnfzig;\n"
            "60: [>%masculine>\u00ADund\u00AD]sechzig;\n"
            "70: [>%masculine>\u00ADund\u00AD]siebzig;\n"
            "80: [>%masculine>\u00ADund\u00AD]achtzig;\n"
            "90: [>%masculine>\u00ADund\u00AD]neunzig;\n"
            "100: <%masculine<\u00ADhundert[\u00AD>>];\n"
            "1000: tausend[\u00ADund\u00AD>>];\n"
            "1100/100: <%masculine<\u00ADhundert[\u00AD>>];\n"
            "10,000: =%number=;"

        "%nummer: =%number=;\n"
        "%number: \n"
            "-x: minus >>;\n"
            "x.x: << Komma >>;\n"
            "null; eins; zwei; drei; vier; f\u00FCnf; sechs; sieben; acht; neun;\n"
            "zehn; elf; zw\u00F6lf; >>\u00ADzehn;\n"
            "20: [>%masculine>\u00ADund\u00AD]zwanzig;\n"
            "30: [>%masculine>\u00ADund\u00AD]drei\u00DFig;\n"
            "40: [>%masculine>\u00ADund\u00AD]vierzig;\n"
            "50: [>%masculine>\u00ADund\u00AD]f\u00FCnfzig;\n"
            "60: [>%masculine>\u00ADund\u00AD]sechzig;\n"
            "70: [>%masculine>\u00ADund\u00AD]siebzig;\n"
            "80: [>%masculine>\u00ADund\u00AD]achtzig;\n"
            "90: [>%masculine>\u00ADund\u00AD]neunzig;\n"
            "100: <%masculine<\u00ADhundert[\u00AD>>];\n"
            "1000: <%masculine<\u00ADtausend[\u00ADund\u00AD>>];\n" // 1000, eintausend; informally often just tausend
            "1,000,000: eine Million[ >>];\n"
            "2,000,000: <%feminine< Millionen[ >>];\n"
            "1,000,000,000: eine Milliarde[ >>];\n"
            "2,000,000,000: <%feminine< Milliarden[ >>];\n"
            "1,000,000,000,000: eine Billion[ >>];\n"
            "2,000,000,000,000: <%feminine< Billionen[ >>];\n"
            "1,000,000,000,000,000: eine Billiarde[ >>];\n"
            "2,000,000,000,000,000: <%feminine< Billiarden[ >>];\n"
            "1,000,000,000,000,000,000: =#,##0.#=;\n"

        "%maskulinum: =%masculine=;\n"
        "%masculine:\n"
            "-x: minus >>;\n"
            "x.x: << Komma >>;\n" // >%number>? (but that results in an integer divide-by-zero fatal error in the formatter in ICU 4.0); sometimes "komma" seems to be used instead of "Komma"
            "null; ein; zwei; drei; vier; f\u00FCnf; sechs; sieben; acht; neun;\n"
            "zehn; elf; zw\u00F6lf; >>\u00ADzehn;\n"
			// Rules for the multiples of 10. Notice that the ones digit goes on the front
            "20: [>%masculine>\u00ADund\u00AD]zwanzig;\n"
            "30: [>%masculine>\u00ADund\u00AD]drei\u00DFig;\n"
            "40: [>%masculine>\u00ADund\u00AD]vierzig;\n"
            "50: [>%masculine>\u00ADund\u00AD]f\u00FCnfzig;\n"
            "60: [>%masculine>\u00ADund\u00AD]sechzig;\n"
            "70: [>%masculine>\u00ADund\u00AD]siebzig;\n"
            "80: [>%masculine>\u00ADund\u00AD]achtzig;\n"
            "90: [>%masculine>\u00ADund\u00AD]neunzig;\n"
            "100: <%masculine<\u00ADhundert[\u00AD>>];\n" // 100, einhundert; informally often just hundert
            "1000: <%masculine<\u00ADtausend[\u00ADund\u00AD>>];\n" // 1000, eintausend; informally often just tausend
            "1,000,000: eine Million[ >>];\n"
            "2,000,000: <%feminine< Millionen[ >>];\n"
            "1,000,000,000: eine Milliarde[ >>];\n"
            "2,000,000,000: <%feminine< Milliarden[ >>];\n"
            "1,000,000,000,000: eine Billion[ >>];\n"
            "2,000,000,000,000: <%feminine< Billionen[ >>];\n"
            "1,000,000,000,000,000: eine Billiarde[ >>];\n"
            "2,000,000,000,000,000: <%feminine< Billiarden[ >>];\n"
            "1,000,000,000,000,000,000: =#,##0.#=;\n"
/* 
 * Current (Java) implementation can't handle these magnitudes
            "1,000,000,000,000,000,000: eine Trillion[ >>];\n"
            "2,000,000,000,000,000,000: <%feminine< Trillionen[ >>];\n"
 * Current (C++) implmenatation can't handle these magnitudes
            "1,000,000,000,000,000,000,000: eine Trilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000: <%feminine< Trilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000: eine Quadrillion[ >>];\n"
            "2,000,000,000,000,000,000,000,000: <%feminine< Quadrillionen[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000: eine Quadrilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000: <%feminine< Quadrilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000: eine Quintillion[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000: <%feminine< Quintillionen[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000: eine Quintilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000,000: <%feminine< Quintilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000,000: eine Sekstillion[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000,000,000: <%feminine< Sekstillionen[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000,000,000: eine Sekstilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000,000,000,000: <%feminine< Sekstilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000,000,000,000: =#,##0.#=;\n"
*/

        "%femininum: =%feminine=;\n"
        "%feminine:\n"
            "-x: minus >>;\n" // %masculine?
            "x.x: << Komma >>;\n" //  >%number>? (but that results in an integer divide-by-zero fatal error in the formatter in ICU 4.0); sometimes "komma" seems to be used instead of "Komma"
            "null; eine; zwei; drei; vier; f\u00FCnf; sechs; sieben; acht; neun;\n"
            "zehn; elf; zw\u00F6lf; >>\u00ADzehn;\n"
			// Rules for the multiples of 10. Notice that the ones digit goes on the front
            "20: [>%masculine>\u00ADund\u00AD]zwanzig;\n"
            "30: [>%masculine>\u00ADund\u00AD]drei\u00DFig;\n"
            "40: [>%masculine>\u00ADund\u00AD]vierzig;\n"
            "50: [>%masculine>\u00ADund\u00AD]f\u00FCnfzig;\n"
            "60: [>%masculine>\u00ADund\u00AD]sechzig;\n"
            "70: [>%masculine>\u00ADund\u00AD]siebzig;\n"
            "80: [>%masculine>\u00ADund\u00AD]achtzig;\n"
            "90: [>%masculine>\u00ADund\u00AD]neunzig;\n"
            "100: <%masculine<\u00ADhundert[\u00AD>>];\n" // 100, einhundert; informally often just hundert
            "1000: <%masculine<\u00ADtausend[\u00ADund\u00AD>>];\n" // 1000, eintausend; informally often just tausend
            "1,000,000: eine Million[ >>];\n"
            "2,000,000: <%feminine< Millionen[ >>];\n"
            "1,000,000,000: eine Milliarde[ >>];\n"
            "2,000,000,000: <%feminine< Milliarden[ >>];\n"
            "1,000,000,000,000: eine Billion[ >>];\n"
            "2,000,000,000,000: <%feminine< Billionen[ >>];\n"
            "1,000,000,000,000,000: eine Billiarde[ >>];\n"
            "2,000,000,000,000,000: <%feminine< Billiarden[ >>];\n"
            "1,000,000,000,000,000,000: =#,##0.#=;\n"
/* 
 * Current (Java) implementation can't handle these magnitudes
            "1,000,000,000,000,000,000: eine Trillion[ >>];\n"
            "2,000,000,000,000,000,000: <%feminine< Trillionen[ >>];\n"
 * Current (C++) implmenatation can't handle these magnitudes
            "1,000,000,000,000,000,000,000: eine Trilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000: <%feminine< Trilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000: eine Quadrillion[ >>];\n"
            "2,000,000,000,000,000,000,000,000: <%feminine< Quadrillionen[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000: eine Quadrilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000: <%feminine< Quadrilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000: eine Quintrillion[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000: <%feminine< Quintrillionen[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000: eine Quintilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000,000: <%feminine< Quintilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000,000: eine Sekstillion[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000,000,000: <%feminine< Sekstillionen[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000,000,000: eine Sekstilliarde[ >>];\n"
            "2,000,000,000,000,000,000,000,000,000,000,000,000,000: <%feminine< Sekstilliarden[ >>];\n"
            "1,000,000,000,000,000,000,000,000,000,000,000,000,000,000: =#,##0.#=;\n"
*/

        "%dordinal:\n"
            "=#,##0==%%dordabbrev=;\n"
        "%%dordabbrev:\n"
            "'.;\n"

        "%amount: =%masculine=;\n"
        "%alt-ones: =%amount=;\n" // default (must be last public name); named for backwards compatibility
        "%%lenient-parse:\n"
            "&\u0000 << ' ' << '-'\n"
            "& ae , \u00e4 & ae , \u00c4\n"
            "& oe , \u00f6 & oe , \u00d6\n"
            "& ue , \u00fc & ue , \u00dc\n"
    }
    SpelloutLocalizations {
        { "%number", "%year", "%masculine", "%feminine", "%amount", "%dordinal", 
        }
        { "de", 
          "nummer", "jahr", "maskulinum", "femininum", "Quantität", "abgekürzter Ordinalzahl", 
        }
        { "en", 
          "number", "year", "masculine", "feminine", "amount", "abbreviated ordinal", 
        }
    }
}
